<!DOCTYPE html>
<html lang="en">

<head>
        <link rel="canonical" href="https://v2rayunode.github.io/news/article-85850.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>java实现快速排序以及快速排序的原理</title>
        <meta name="description" content="快速排序（Quick Sort）是对冒泡排序的一种改进，通过一趟排序将要排序的数据序列分成独立的两部分，其中一部分的所有数据比另一部分的所有数据都要小，然后按此方法对两部分数据分别进行快速排序，整个排" />
        <link rel="icon" href="/assets/website/img/v2rayunode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayU Node免费梯子节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayunode.github.io/news/article-85850.htm" />
    <meta property="og:site_name" content="V2rayU Node免费梯子节点分享官网" />
    <meta property="og:title" content="java实现快速排序以及快速排序的原理" />
    <meta property="og:image" content="https://v2rayunode.github.io/uploads/20241222-1/35f2ca1dcee5e084eaf1ccbd9a4339cc.webp" />
        <meta property="og:release_date" content="2025-04-01T09:46:39" />
    <meta property="og:updated_time" content="2025-04-01T09:46:39" />
        <meta property="og:description" content="快速排序（Quick Sort）是对冒泡排序的一种改进，通过一趟排序将要排序的数据序列分成独立的两部分，其中一部分的所有数据比另一部分的所有数据都要小，然后按此方法对两部分数据分别进行快速排序，整个排" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="java实现快速排序以及快速排序的原理">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="fonts/font-awesome/css/font-awesome.css">
    <!-- Stylesheet
    ================================================== -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/style.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/nivo-lightbox/nivo-lightbox.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/nivo-lightbox/default.css">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-H4M01FEXJ2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-H4M01FEXJ2');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="page-top" data-page="detail">
        <!-- Navigation
        ==========================================-->
    <nav id="menu" class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>

                <a class="navbar-brand" href="/">
                                        <span>V2rayU Node</span>
                                    </a>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
    </nav>
    <!-- Header -->
    <header id="header">
        <div class="intro category">
            <div class="overlay">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12 intro-text">
                            <h1>java实现快速排序以及快速排序的原理</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- About Section -->
    <div id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>快速排序（Quick Sort）是对冒泡排序的一种改进，通过一趟排序将要排序的数据序列分成独立的两部分，其中一部分的所有数据比另一部分的所有数据都要小，然后按此方法对两部分数据分别进行快速排序，整个排序过程递归进行，最终使整个数据序列变成有序的数据序列。</p> <ol> <li>快速排序算法的原理<br /> 快速排序算法的原理是：选择一个关键值作为基准值（一般选择第1个元素为基准元素），将比基准值大的都放在右边的序列中，将比基准值小的都放在左边的序列中。具体的循环过程如下。<br /> （1）从后向前比较，用基准值和最后一个值进行比较。如果比基准值小，则交换位置；如果比基准值大，则继续比较下一个值，直到找到第1个比基准值小的值才交换位置。<br /> （2）在从后向前找到第1个比基准值小的值并交换位置后，从前向后开始比较。如果有比基准值大的，则交换位置；如果没有，则继续比较下一个，直到找到第1个比基准值大的值才交换位置。<br /> （3）重复执行以上过程，直到从前向后比较的索引大于等于从后向前比较的索引，则结束一次循环。这时对于基准值来说，左右两边都是有序的数据序列。<br /> （4）重复循环以上过程，分别比较左右两边的序列，直到整个数据序列有序。</li> </ol> <p>如下图所示是对数组[6,9,5,7,8]进行快速排序。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220830/8edb8716491c5a42bea0e35451d642cd.jpg" alt="java实现快速排序以及快速排序的原理"></p> <p>先以第1个元素6为基准值，从数组的最后一位从后向前比较（比较顺序为：8&gt;6、7&gt;6、5&lt;6），找到第1个比6小的数据5，然后进行第1次位置交换，即将数据6（索引为0）和数据5（索引为2）交换位置，之后基准值6位于索引2处；接着从前向后比较（比较顺序为：5&lt;6、9&gt;6），找到第1个比6大的数据9，然后进行第2次位置交换，即将数据6（索引为2）和数据9（索引为1）交换位置，交换后6位于索引1处；这时高位和低位都在6处，第一次递归完成。在第一次递归完成后，基准值6前面的数据都比6小，基准值6后面的数据都比6大。重复执行上述过程，直到整个数组有序。</p> <ol start="2"> <li>快速排序的java实现</li> </ol> <pre><code class="prism language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">Solution</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 快速排序      * @param arr 数组      * @param low 最低位      * @param high 最高位      * @return 排序好的数组      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> low<span class="token punctuation">,</span><span class="token keyword">int</span> high<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> left<span class="token operator">=</span> low<span class="token punctuation">;</span><span class="token comment">//从前向后比较的索引</span><span class="token keyword">int</span> right<span class="token operator">=</span> high<span class="token punctuation">;</span><span class="token comment">//从后向前比较的索引</span><span class="token keyword">int</span> key<span class="token operator">=</span> arr<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//基准值</span><span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//从后向前比较</span><span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;</span> right<span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">&gt;=</span> key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 right<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//如果没有比基准值小的，则比较下一个，直到有比基准值小的，则交换位置，然后又从前向后比较</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">&lt;=</span> key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> temp<span class="token operator">=</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>                 arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>                 arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//从前向后比较</span><span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;</span> right<span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">&lt;=</span> key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 left<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//如果没有比基准值大的，则比较下一个，直到有比基准值大的，则交换位置</span><span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">&gt;=</span> key<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> temp<span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>                 arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>                 arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//此时第一次循环比较结束，基准值的位置已经确定。左边的值都比关键值小，右边的值都比关键值大，但是两边的顺序还有可能不一样，接着进行下面的递归调用</span><span class="token comment">//递归左边序列：从第一个索引位置到“关键值索引-1”</span><span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token operator">&gt;</span> low<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>low<span class="token punctuation">,</span>left<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//递归右边序列：从“关键值索引+1”到最后一个位置</span><span class="token keyword">if</span><span class="token punctuation">(</span>right<span class="token operator">&lt;</span> high<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>right<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>high<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> arr<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>以上代码定义了名为quickSort()的快速排序方法，在该方法中定义了3个变量start、end和key，分别表示从前向后比较的索引、从后向前比较的索引和基准值。具体过程为：①通过while循环从后向前比较，找到比基准值小的，则交换位置；②通过while循环从前向后比较，找到比基准值大的，则交换位置；③根据从前向后比较的索引和从后向前比较的索引的大小不断递归调用，直到递归完成，返回排序后的结果。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-85137.htm">三国杀有限定技的武将有谁（三国杀里的限定技能用几次）</a></p>
                                        <p>下一个：<a href="/news/article-85851.htm">天津市宠物领养机构电话（天津市宠物领养中心地址）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-86566.htm" title="宠物医院美团好评回复优美语句 宠物医院美团好评回复优美语句怎么写">宠物医院美团好评回复优美语句 宠物医院美团好评回复优美语句怎么写</a></li>
                        <li class="py-2"><a href="/news/article-75408.htm" title="UnrealEngine创建自定义资产类型">UnrealEngine创建自定义资产类型</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-21-free-node-subscribe-links.htm" title="3月21日每日最新机场订阅→21.2M/S|免费节点Shadowrocket/Clash/V2ray/SSR链接地址分享">3月21日每日最新机场订阅→21.2M/S|免费节点Shadowrocket/Clash/V2ray/SSR链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-77448.htm" title="动物疫苗技术人员招聘 动物疫苗技术人员招聘信息">动物疫苗技术人员招聘 动物疫苗技术人员招聘信息</a></li>
                        <li class="py-2"><a href="/news/article-77447.htm" title="公务员国考什么时候报名（公务员国考什么时候考试时间）">公务员国考什么时候报名（公务员国考什么时候考试时间）</a></li>
                        <li class="py-2"><a href="/news/article-84411.htm" title="动物疫苗板块有哪些（利好消息频传,这些动物疫苗股值得关注）">动物疫苗板块有哪些（利好消息频传,这些动物疫苗股值得关注）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-node-share.htm" title="3月13日每日最新机场订阅→20.8M/S|免费节点SSR/V2ray/Shadowrocket/Clash链接地址分享">3月13日每日最新机场订阅→20.8M/S|免费节点SSR/V2ray/Shadowrocket/Clash链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-6-node-share.htm" title="3月6日每日最新机场订阅→22.7M/S|免费节点SSR/V2ray/Clash/Shadowrocket链接地址分享">3月6日每日最新机场订阅→22.7M/S|免费节点SSR/V2ray/Clash/Shadowrocket链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-80898.htm" title="pandas读取csv文件时报错的解决方式，你get到了吗？">pandas读取csv文件时报错的解决方式，你get到了吗？</a></li>
                        <li class="py-2"><a href="/news/article-78124.htm" title="上海宠物领养救助站是真的吗 上海宠物领养救助基地是真的吗">上海宠物领养救助站是真的吗 上海宠物领养救助基地是真的吗</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!-- Footer Section -->
    <div id="footer">
        <div class="container text-center">
            <p>
                <a href="/">首页</a> |
                <a href="/free-node/">免费节点</a> |
                <a href="/news/">新闻资讯</a> |
                <a href="/about-us.htm">关于我们</a> |
                <a href="/disclaimer.htm">免责申明</a> |
                <a href="/privacy.htm">隐私申明</a> |
                <a href="/sitemap.xml">网站地图</a>
            </p>
            <p>
                <a href="/">V2rayU Node免费梯子节点分享官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/jquery.1.11.1.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/bootstrap.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/SmoothScroll.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/nivo-lightbox.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/jqBootstrapValidation.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/contact_me.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>